<?php
/**
 * Magento Enterprise Edition
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Magento Enterprise Edition License
 * that is bundled with this package in the file LICENSE_EE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.magentocommerce.com/license/enterprise-edition
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     enterprise_default
 * @copyright   Copyright (c) 2013 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://www.magentocommerce.com/license/enterprise-edition
 */
 
 $search_handle = '';
 
 function celebros_content_search($query_term, $search_profile) {
 	global $search_handle;
	$q_api = Mage::getModel('conversionpro/salespersonSearchApi');
	 $q_search = $q_api->Search( $query_term )->results->GetSearchHandle();
// 	 $search_handle = Mage::getSingleton('conversionpro/session')->getSearchHandle();
// 	 $q_filtered = $q_api->SortByRelevancy( $search_handle );
	$q_r_handle = $q_api->SortByRelevancy( $q_search )->results->GetSearchHandle();
	// $search_handle = $q_filtered->QwiserSearchResults->get_attribute("SearchHandle");
// 	krumo($search_handle);
 	 $q_filtered = $q_api->ActivateProfile( $q_r_handle, $search_profile );
// 	$q_handle = Mage::GetModel('conversionpro/Api_QwiserSearchResults')->GetSearchHandle();
// 	var_dump($q_handle);
	 $q_results = $q_filtered->results->Products->Items;
	 $q_contents = array();
	 foreach( $q_results as $key=>$product ) {
	 	$fields = array();
	 	foreach( $product->Field as $name=>$value ) {
	 		if( !empty( $value ) ) {
	 			$fields[$name] = $value;
	 		}
	 	}
	 	$q_contents[$key] = $fields;
	 }
	 
// 	 return $q_results['Products'];
	 return $q_contents;
 }
 
//  function format_content_results($content_results) {
//  	$html = '<div class="category-products">';
//  		$i=0;
//  		$html .= '<ul class="products-grid">';
//  		foreach( $content_results as $key=>$result ) {
//  			$html .= '<li class="item">';
//  			$html .= '<h2 class="product-name">';
//  			$html .= '<a href="'.$result['link'].'">';
//  			$html .= $result['title'];
//  			$html .= '</a>';
//  			$html .= '</h2>';
// 			$html .= '<p class="product-description">';
// 			$html .= '<a href="'.$result['link'].'">';
//  			$html .= $result['description'].'READ MORE';
//  			$html .= '</a>';
//  			$html .= '</p>';
//  			$html .= '</li>';
//  		}
//  	$html .= '</ul></div>';
//  	echo $html;
//  }

 function format_content_results( $content_results, $search_profile ) {
 	//use Magento's standard catalog output for tab content
//  	krumo($search_profile);
//  	krumo($content_results);
 	$_helper = Mage::helper('catalog/output');
 	$mode = 'grid';
 	//message for no content found
 	if( count( $content_results ) < 1 ) {
 		echo '<p class="note-msg">There are no products matching the selection.</p>';
 		return false;
 	}
 
 	//if content is found for this tab
 	else {
 		//add toolbars
//  		$html = $this->getToolbarHtml();
//  		$html .= $this->getAdditionalHtml();
		$html .= '<div class="category-products">';
		//for list view
// 		if($this->getMode()!='grid') {
		if( $mode !='grid' ) {
			$i=0;
			$html .= ' <ol class="products-list" id="products-list">';
			foreach( $content_results as $key=>$result ) {
				//get product obj if is product profile
				if( $search_profile == "Products" ) {
					$product = Mage::getModel( 'catalog/product' );
					$productId = $product->getIdBySku( $result['sku'] );
					if($productId) {
						$product->load($productId);
					}
					$theProductBlock = new Mage_Catalog_Block_Product;
				}
				//define li class, add last for last item in list view
				$html .= '<li class="item';
				if( ++$i == count($content_results) ) {
					$html .= ' last';
				}
				$html .= '">';
				//add image if profile is product
				if( $productId ) {
					$html .= '<a href="' . $result['link'] . '" title="' . $result['title'] . '" class="product-image"><img src="' . $result['thumbnail'] . '" width="166" height="166" alt="' . $result['title'] . '" /></a>';
				}
				//name, meta, and description
				$html .= '<div class="product-shop">
                <div class="f-fix">
                <h2 class="product-name">';
				$html .= '<a href="' . $result['link'] . '" title="' . $result['title'] . '">';
				$html .= $result['title'];
				$html .= '</a>';
				$html .= '</h2>';
				if( $productId ) {
					if( $product->getRatingSummary() ) {
						$html .= $theProductBlock->getReviewsSummaryHtml($product);
					}
					$html .= $theProductBlock->getPriceHtml($product, true);
					unset($theProductBlock);
				}
				$html .= '<div class="desc std">';
				$html .= $result['description'];
				if( $search_profile != "Product" ) {
					$html .= '<a href="' . $result['link'] . '" title="' . $result['title'] . '" class="link-learn">READ MORE</a>';
				}
				else {
					$html .= '<a href="' . $result['link'] . '" title="' . $result['title'] . '" class="link-learn">LEARN MORE</a>';
				}
				$html .= '</div>';
				//buttons for products only
				if( $productId && $product->isSaleable() ) {
                    $html .= '<button type="button" title="Add to Cart" class="button btn-cart" onclick="setLocation(\'' . Mage::helper('checkout/cart')->getAddUrl($product) . '\')"><span><span>Add to Cart</span></span></button>';
                }
                elseif( $productId ) {
                	if ( $product->getIsSalable() ) {
                        $html .= '<p class="availability in-stock"><span>In stock</span></p>';
                    }
                    else {
                        $html .= '<p class="availability out-of-stock"><span>Out of stock</span></p>';
                	}
                }
                //add product to... buttons
                if( $productId ) {
                	$html .= '<ul class="add-to-links">';
					if ( Mage::helper( 'wishlist' )->isAllow() ) {
						if( !Mage::getSingleton( 'vbw_punchout/session' )->isPunchoutSession() ) {   
							$html .= '<li><a href="' . Mage::helper('wishlist')->getAddUrl($product) . '" class="link-wishlist"><span>+</span>Add to Wishlist</a></li>';
						}
						if( $compareUrl = Mage::helper('catalog/product_compare')->getAddUrl( $product ) ) {
							$html .= '<li><a href="' . $compareUrl . '" class="link-compare">Add to Compare</a></li>';
						}
					}
					$html .= '</ul>';
				}
				$html .= '</div></div>';
				$html .= '</li>';
			}
			$html .= '</ol>
			<script type="text/javascript">decorateList("products-list", "none-recursive")</script>';
		}
		else {
			//grid view
			//get item count
			$result_count = count( $content_results );
			$i = 0;
			foreach( $content_results as $key=>$result ) {
				//get product obj if is product profile
				if( $search_profile == "Products" ) {
					$product = Mage::getModel( 'catalog/product' );
					$productId = $product->getIdBySku( $result['sku'] );
					if($productId) {
						$product->load($productId);
					}
					$theProductBlock = new Mage_Catalog_Block_Product;
				}
				//assign classes to items in 3-col layout
				if( $i++%3 == 0 ) {
					$html .= '<ul class="products-grid row">';
				}
				$html .= '<li class="col-md-4 item';
				if( ( $i-1 )%3 == 0 ) {
					$html .= ' first';
				}
				elseif( $i%3 == 0 ) {
					$html .= ' last';
				}
				$html .= '">';
				//add image if profile is product
				if( $productId ) {
					$html .= '<a href="' . $result['link'] . '" title="' . $result['title'] . '" class="product-image"><img src="' . $result['thumbnail'] . '" width="135" height="135" alt="' . $result['title'] . '" /></a>';
				}
				//name, meta, and description
				$html .= '<h2 class="product-name">';
				$html .= '<a href="' . $result['link'] . '" title="' . $result['title'] . '">';
				$html .= $result['title'];
				$html .= '</a>';
				$html .= '</h2>';
				if( $productId ) {
					if( $product->getRatingSummary() ) {
						$html .= $theProductBlock->getReviewsSummaryHtml($product);
					}
					$html .= $theProductBlock->getPriceHtml($product, true);
				}
				if( !$productId ) {
					$html .= '<div class="desc std">';
					$html .= $result['description'];
					$html .= '<a href="' . $result['link'] . '" title="' . $result['title'] . '" class="link-learn button">READ MORE</a>';
					$html .= '</div>';
				}
				else {
				//buttons for products only
				$html .= '<div class="actions">';
					if( $productId ) {
						if( $product->isSaleable() ) {
							$html .= '<button type="button" title="Add to Cart" class="button btn-cart" onclick="setLocation(\'' . Mage::helper('checkout/cart')->getAddUrl($product) . '\')"><span><span>Add to Cart</span></span></button>';
						}
						if ( $product->getIsSalable() ) {
							$html .= '<p class="availability in-stock"><span>In stock</span></p>';
						}
						else {
							$html .= '<p class="availability out-of-stock"><span>Out of stock</span></p>';
						}
					}
					//add product to... buttons
					$html .= '<ul class="add-to-links">';
					if ( Mage::helper( 'wishlist' )->isAllow() ) {
						if( !Mage::getSingleton( 'vbw_punchout/session' )->isPunchoutSession() ) {   
							$html .= '<li><a href="' . Mage::helper('wishlist')->getAddUrl($product) . '" class="link-wishlist"><span>+</span>Add to Wishlist</a></li>';
						}
						if( $compareUrl = Mage::helper('catalog/product_compare')->getAddUrl( $product ) ) {
							$html .= '<li><a href="' . $compareUrl . '" class="link-compare">Add to Compare</a></li>';
						}
					}
					$html .= '</ul></div>';
					unset($theProductBlock);
				}
				$html .= '</li>';
				if( $i%3 == 0 || $i == $result_count ) {
					$html .= '</ul>';
				}
			}
			$html .= '<script type="text/javascript">decorateGeneric( $$( "ul.products-grid" ), ["odd","even","first","last"])</script>';
		}
		$html .= '</div>';
		$html .= '<div class="toolbar-bottom">';
// 		$html .+ $this->getToolbarHtml();
		$html .= '</div>';
		return $html;
	}
 }
 
//draw tabs for any number of available profiles, excluding SiteDefault
function draw_result_tabs( $the_query ) {
 	$q_api = Mage::getModel('conversionpro/salespersonSearchApi');
 	$tabs = array();
 	//get all profiles. set title for each to profile name, skipping SiteDefault, renaming Content to Information. Set content for tabs.
 	$profiles = $q_api->GetAllSearchProfiles()->results;
 	foreach( $profiles as $profile ) {
 		if( $profile == 'SiteDefault' ) {
 			continue;
 		}
 		elseif( $profile == 'Content') {
 			$title = 'Information';
 		}
 		else {
 			$title = $profile;
 		}
 		//create content for this profile's tab
 		$content = format_content_results( celebros_content_search( $the_query, $profile ), $profile );
 		$tabs[$profile] = array(
 			'title'		=>	$title,
 			'content'	=>	$content
 		);
 	}

 	//generate html for tab container, titles, & contents
 	$tab_output = '<div id="search-results-tabs">
 	<ul id="search-results-tab-titles">';
 	foreach( $tabs as $tab ) {
 		//no tab for empty results. sure...
 		if( $tab['content'] == false ) {
 			continue;
 		}
 		$tab_output .= '<li><a href="#';
 		$tab_output .= $tab['title'];
 		$tab_output .= '-results">';
 		$tab_output .= $tab['title'];
 		$tab_output .= '</a></li>';
 	}
 	$tab_output .= '</ul>';
 	foreach( $tabs as $tab ) {
 		$tab_output .= '<div id="';
 		$tab_output .= $tab['title'];
 		$tab_output .= '-results">';
 		$tab_output .= $tab['content'];
 		$tab_output .= '</div>';
 	}
 	$tab_output .= '</div>';
 	echo $tab_output;
 }
 
 //debug include
 include_once( $_SERVER['DOCUMENT_ROOT'] . '/krumo/class.krumo.php' );
 
 //begin template
?>

<div class="page-title">    
    <h1><?php echo ($this->getHeaderText() || $this->getHeaderText() === false) ? $this->getHeaderText() : $this->__("Search results for '%s'", $this->helper('catalogsearch')->getEscapedQueryText()) ?></h1>
</div>
<?php 
$the_query = urlencode( Mage::helper( 'catalogsearch' )->getQueryText() );
// 		 var_dump( $the_query );
		 draw_result_tabs( $the_query );
// 		 krumo( celebros_content_search( $the_query ) );
// 		 krumo(celebros_content_search( $the_query )->results->Products);
?>
<script type="text/javascript">
jQuery( document ).ready(function( $ ) {
	$( "#search-results-tabs" ).tabs();
});
</script>
